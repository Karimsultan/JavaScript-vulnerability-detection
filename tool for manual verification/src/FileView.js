import { Button, Tab, Tabs } from "@material-ui/core";
import { useLayoutEffect } from "react";
import { useEffect } from "react";
import { useState } from "react";
import ReactDiffViewer from 'react-diff-viewer';
import { FuncView } from "./FuncView";
import { functionMarkers, statusLabel } from "./utils";

export function FileView({file, onChange}) {
    const [funcIndex, setFuncIndex] = useState(0);
    const selectedFunc = file.affectedFunctions[funcIndex];

    useLayoutEffect(() => setFuncIndex(0), [file]);

    function handleChange(event, val) {
        setFuncIndex(val);
    }

    function acceptAll() {
        file.affectedFunctions.forEach(func => func.confirmed = true);
        onChange();
    }

    function declineAll() {
        file.affectedFunctions.forEach(func => func.confirmed = false);
        onChange();
    }

    return <>
        <Button color="primary" variant="outlined" size="small" onClick={acceptAll}>Accept all</Button>
        <Button color="secondary" variant="outlined" size="small" onClick={declineAll}>Decline all</Button>
        <Tabs value={funcIndex} onChange={handleChange} aria-label="simple tabs example" variant="scrollable" scrollButtons="auto">
            {file.affectedFunctions.map((func, i) => 
                <Tab label={`Func ${i}` + statusLabel(func) + functionMarkers(func).join("")} key={func.vulnerable + i}></Tab>
            )}
        </Tabs>
        {selectedFunc && <FuncView func={selectedFunc} onChange={onChange}></FuncView>}
    </>;
}