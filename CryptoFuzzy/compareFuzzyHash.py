import re
from simhash import Simhash, SimhashIndex
import json
import sys

def get_features(s):
    width = 10

    return [s[i:i + width] for i in range(max(len(s) - width + 1, 1))]


with open(sys.argv[1], encoding="utf8") as f: #path to vulnerable functions
  data = json.load(f)

objs = [(i, Simhash(get_features(v["vector"]))) for i, v in enumerate(data)]
index = SimhashIndex(objs, k=1)

print("Index done")

with open(sys.argv[2], encoding="utf8") as input:  #path to the file, that needs to be checked
    toCheck = json.load(input)

result = []
i = 0
total = len(toCheck)
for obj in toCheck:
    i += 1
    if(i%1000==0):
        print("done: ", i, "out of: ", total)
    dups = index.get_near_dups(Simhash(get_features(obj["vector"])))
    for dup in dups:
        result.append({"vulnerable": data[int(dup)], "found": obj})
        print("found")


with open(sys.argv[3], "w") as output:
    json.dump(result, output, indent=4)