import fs from "fs";
import { evilRegExes } from "./utils.mjs";
import { semgrep } from "./utils.mjs";

const INPUT = process.argv[2];
const OUTPUT = process.argv[3];

const data = JSON.parse(fs.readFileSync(INPUT));

// fs.writeFileSync("detected.json", "");
console.log("Starting proto_semgrep: ", new Date());
let start = 0;
let i = 0;
for(const vuln of data){
    i++;
    console.time("Single file");

    if (semgrep(vuln.function, "./newNewProto.yaml")) {
        vuln.protoPollution = true;
    }

    const regexes = evilRegExes(vuln.function);
    if (regexes.length) {
        vuln.evilRe = regexes;
        if (semgrep(vuln.function, "./redosRules.yaml")) {
            vuln.redos = true;
        }
    }
    
    if (vuln.evilRe || vuln.protoPollution) {
        fs.appendFileSync(OUTPUT, JSON.stringify(vuln) + ",\n");
    }
    console.log(i + " out of " + (data.length+start))
    fs.writeFileSync("./lastIndex.txt", i.toString());
    console.timeEnd("Single file");
}

console.log("semgrep done", new Date());