rules:
- id: prototype-polution1
  patterns:
    - pattern-either: 
      - pattern: |
          $SOME_OBJ[$KEY] = ...
      - pattern: |
          $SOME_OBJ[$KEY[...]] = ...
    - pattern-not: |
        $SOME_OBJ[$KEY] = $SOME_OBJ[$KEY] || $SOMETHING_ELSE
    - pattern-not: |
        $SOME_OBJ[$KEY[$INDEX]] = $SOME_OBJ[$KEY[$INDEX]] || $SOMETHING_ELSE
    - pattern-not: |
        $SOME_OBJ[$KEY] = $SOME_OBJ[$KEY] ? $SOME_OBJ[$KEY] : $SOMETHING_ELSE
    - pattern-not: |
        $SOME_OBJ[$KEY[$INDEX]] = $SOME_OBJ[$KEY[$INDEX]] ? $SOME_OBJ[$KEY[$INDEX]] : $SOMETHING_ELSE
    - pattern-either:
        - pattern-inside: |
            function ... (...,$OBJ,...) {
              ...
            }
        - pattern-inside: | 
            function ...(...) {
            ...
            $OBJ = arguments[...]
            ...
            }
        - pattern-inside: |
            function ...(...,$ARG,...) {
            ...
            $OBJ = <... $ARG ...>
            ...
            }
        - pattern-inside: |
            function ...(...$ARG) {
              ...
              $OBJ = $ARG[...]
              ...
            }
        
    - pattern-either:
      - pattern-inside: |
          Object.keys($OBJ).$METHOD(function (...,$KEY,...) {
            ...
          })
    - metavariable-regex:
          metavariable: $METHOD
          regex: (forEach|map|flatMap)
    - pattern-not-regex: |
        ((__proto__[\s\S]*prototype[\s\S]*constructor)|(__proto__[\s\S]*constructor[\s\S]*prototype)|(prototype[\s\S]*__proto__[\s\S]*constructor)|(prototype[\s\S]*constructor[\s\S]*__proto__)|(constructor[\s\S]*__proto__[\s\S]*prototype)|(constructor[\s\S]*prototype[\s\S]*__proto__))[\s\S]*
    - pattern-not-regex: |
        Object\.freeze\([\s\S]*
    - pattern-not-regex: |
        Object\.create\(null\)[\s\S]*
  message: usage of Object.keys on object from arguments
  severity: WARNING
  languages: [javascript]


- id: prototype-polution2
  patterns:
    - pattern-either: 
      - pattern: |
          $SOME_OBJ[$KEY] = ...
      - pattern: |
          $SOME_OBJ[$KEY[...]] = ...
    - pattern-not: |
        $SOME_OBJ[$KEY] = $SOME_OBJ[$KEY] || $SOMETHING_ELSE
    - pattern-not: |
        $SOME_OBJ[$KEY[$INDEX]] = $SOME_OBJ[$KEY[$INDEX]] || $SOMETHING_ELSE
    - pattern-not: |
        $SOME_OBJ[$KEY] = $SOME_OBJ[$KEY] ? $SOME_OBJ[$KEY] : $SOMETHING_ELSE
    - pattern-not: |
        $SOME_OBJ[$KEY[$INDEX]] = $SOME_OBJ[$KEY[$INDEX]] ? $SOME_OBJ[$KEY[$INDEX]] : $SOMETHING_ELSE
    - pattern-either:
      - pattern-inside: |
          function ...(...,$ARG,...) {
            ...
            $KEYS = <...$ARG...>
            ...
          }
      - pattern-inside: |
          function ...(...,$OBJ,...,$KEYS,...) {
            ...
          }
    - pattern-inside: |
        $KEYS.$METHOD(function (...,$KEY,...) {
          ...
        })
    - metavariable-regex:
          metavariable: $METHOD
          regex: (forEach|map|flatMap)
    - pattern-not-regex: |
        ((__proto__[\s\S]*prototype[\s\S]*constructor)|(__proto__[\s\S]*constructor[\s\S]*prototype)|(prototype[\s\S]*__proto__[\s\S]*constructor)|(prototype[\s\S]*constructor[\s\S]*__proto__)|(constructor[\s\S]*__proto__[\s\S]*prototype)|(constructor[\s\S]*prototype[\s\S]*__proto__))[\s\S]*
    - pattern-not-regex: |
        Object\.freeze\([\s\S]*
    - pattern-not-regex: |
        Object\.create\(null\)[\s\S]*
  message: iteration of keys, and object assignment (keys from arguments)
  severity: WARNING
  languages: [javascript]

- id: prototype polution21
  patterns:
    - pattern-either: 
      - pattern: |
          $SOME_OBJ[$KEY] = ...
      - pattern: |
          $SOME_OBJ[$KEY[...]] = ...
    - pattern-not: |
        $SOME_OBJ[$KEY] = $SOME_OBJ[$KEY] || $SOMETHING_ELSE
    - pattern-not: |
        $SOME_OBJ[$KEY[$INDEX]] = $SOME_OBJ[$KEY[$INDEX]] || $SOMETHING_ELSE
    - pattern-not: |
        $SOME_OBJ[$KEY] = $SOME_OBJ[$KEY] ? $SOME_OBJ[$KEY] : $SOMETHING_ELSE
    - pattern-not: |
        $SOME_OBJ[$KEY[$INDEX]] = $SOME_OBJ[$KEY[$INDEX]] ? $SOME_OBJ[$KEY[$INDEX]] : $SOMETHING_ELSE
    - pattern-either:
      - pattern-inside: |
          function ...(...,$ARG,...) {
            ...
            $KEYS = <...$ARG...>
            ...
          }
      - pattern-inside: |
          function ...(...) {
          ...
          $KEYS = arguments[...]
          ...
          }
    - pattern-inside: |
        for ($KEY in $KEYS) 
            ...
        
    - pattern-not-regex: |
        ((__proto__[\s\S]*prototype[\s\S]*constructor)|(__proto__[\s\S]*constructor[\s\S]*prototype)|(prototype[\s\S]*__proto__[\s\S]*constructor)|(prototype[\s\S]*constructor[\s\S]*__proto__)|(constructor[\s\S]*__proto__[\s\S]*prototype)|(constructor[\s\S]*prototype[\s\S]*__proto__))[\s\S]*
    - pattern-not-regex: |
        Object\.freeze\([\s\S]*
    - pattern-not-regex: |
        Object\.create\(null\)[\s\S]*
  message: (temp)
  severity: WARNING
  languages: [javascript]


- id: prototype polution3
  patterns:
    - pattern-either: 
      - pattern: |
          $SOME_OBJ[$KEY] = ...
    - pattern-not: |
        $SOME_OBJ[$KEY] = $SOME_OBJ[$KEY] || $SOMETHING_ELSE
    - pattern-not: |
        $SOME_OBJ[$KEY] = $SOME_OBJ[$KEY] ? $SOME_OBJ[$KEY] : $SOMETHING_ELSE
    - pattern-inside: |
          function ...(...,$OBJ,...) {
            ...
          }
    - pattern-inside: |
        for ($KEY in $OBJ) 
            ...
    - pattern-not-regex: |
        ((__proto__[\s\S]*prototype[\s\S]*constructor)|(__proto__[\s\S]*constructor[\s\S]*prototype)|(prototype[\s\S]*__proto__[\s\S]*constructor)|(prototype[\s\S]*constructor[\s\S]*__proto__)|(constructor[\s\S]*__proto__[\s\S]*prototype)|(constructor[\s\S]*prototype[\s\S]*__proto__))[\s\S]*
    - pattern-not-regex: |
        Object\.freeze\([\s\S]*
    - pattern-not-regex: |
        Object\.create\(null\)[\s\S]*
  message: loop through keys in object 
  severity: WARNING
  languages: [javascript]

- id: prototype-polution4
  patterns:
    - pattern-either: 
      - pattern: |
          $SOME_OBJ[$KEY] = ...
      - pattern: |
          $SOME_OBJ[$KEY[...]] = ...
    - pattern-not: |
        $SOME_OBJ[$KEY] = $SOME_OBJ[$KEY] || $SOMETHING_ELSE
    - pattern-not: |
        $SOME_OBJ[$KEY[$INDEX]] = $SOME_OBJ[$KEY[$INDEX]] || $SOMETHING_ELSE
    - pattern-not: |
        $SOME_OBJ[$KEY] = $SOME_OBJ[$KEY] ? $SOME_OBJ[$KEY] : $SOMETHING_ELSE
    - pattern-not: |
        $SOME_OBJ[$KEY[$INDEX]] = $SOME_OBJ[$KEY[$INDEX]] ? $SOME_OBJ[$KEY[$INDEX]] : $SOMETHING_ELSE
    - pattern-either: 
      - pattern-inside: |
          function ...(...,$ARG,...) {
            ...
            $KEY0 = <...$ARG...>
            ...
            $KEY = <...$KEY0...>
            ...
          }  
      - pattern-inside: |
          function ...(...,$OBJ0,...,$KEY0,...) {
            ...
            $KEY = <...$KEY0...>
            ...
            $SOME_OBJ = <...$OBJ0...>
            ...
          }
      - pattern-inside: |
          function ...(..., $PATH,...) {
            ...
            $KEY = <...$PATH...>
            ...
          }
    - pattern-not-regex: |
        ((__proto__[\s\S]*prototype[\s\S]*constructor)|(__proto__[\s\S]*constructor[\s\S]*prototype)|(prototype[\s\S]*__proto__[\s\S]*constructor)|(prototype[\s\S]*constructor[\s\S]*__proto__)|(constructor[\s\S]*__proto__[\s\S]*prototype)|(constructor[\s\S]*prototype[\s\S]*__proto__))[\s\S]*
    - pattern-not-regex: |
        Object\.freeze\([\s\S]*
    - pattern-not-regex: |
        Object\.create\(null\)[\s\S]*
    - pattern-not-inside: |
        <...$KEY += "..."...>
        ...
    - pattern-not-inside: |
        <...$KEY = $STR + "..."...>
        ...
    - pattern-not-inside: |
        <...$KEY = "..." + $STR...>
        ...
    - pattern-not-inside: |
        <...$KEY++...>
        ...
    - pattern-not-inside: |
        <...$KEY--...>
        ...
    - pattern-not-inside: |
        <...$KEY = $NUM1 - $NUM2...>
        ...
    - pattern-not-inside: |
        <...$KEY -= $NUM1...>
        ...
    - pattern-not-inside: |
        while($KEY--) {
          ...
        }
    - pattern-not-inside: |
        while($KEY++) {
          ...
        }

  message: FP DANGER. assignment to obj[key] (key reassigned from arguments). (typical for obj,path,value) 
  severity: WARNING
  languages: [javascript]

- id: prototype-polution5
  patterns:
    - pattern-either: 
      - pattern: |
          $OBJ2[$KEY3] = ...
    - pattern-inside: |
          function ...(...,$OBJ,...,$KEYS,...) {
            ...
            $OBJ2 = <...$OBJ...>
            ...
          }
    - pattern-inside: |
        $KEYS.$METHOD(function (...,$KEY,...) {
          ...
          $KEY2 = <...$KEY...>
          ...
          $KEY3 = <...$KEY2...>
          ...
        })
    - metavariable-regex:
          metavariable: $METHOD
          regex: (forEach|map|flatMap)
    - pattern-not-regex: |
        ((__proto__[\s\S]*prototype[\s\S]*constructor)|(__proto__[\s\S]*constructor[\s\S]*prototype)|(prototype[\s\S]*__proto__[\s\S]*constructor)|(prototype[\s\S]*constructor[\s\S]*__proto__)|(constructor[\s\S]*__proto__[\s\S]*prototype)|(constructor[\s\S]*prototype[\s\S]*__proto__))[\s\S]*
    - pattern-not-regex: |
        Object\.freeze\([\s\S]*
    - pattern-not-regex: |
        Object\.create\(null\)[\s\S]*
  message: assignment of obj[key] without key check (obj reassigned 1 time, key - 2 times) 
  severity: WARNING
  languages: [javascript]

- id: prototype-polution6
  patterns:
    - pattern-either: 
      - pattern: $TARGET[$KEY] = ...
    - pattern-inside: |
          function ...(...,$ARG,...) {
            ...
            $TARGET = $ARG[...]
            ...
            $KEYS = $ARG[...]
            ...
            $KEYS2 = Object.keys($KEYS)
            ...
            $KEY = <...$KEYS2...>
            ...
          }
    - pattern-not-regex: |
        ((__proto__[\s\S]*prototype[\s\S]*constructor)|(__proto__[\s\S]*constructor[\s\S]*prototype)|(prototype[\s\S]*__proto__[\s\S]*constructor)|(prototype[\s\S]*constructor[\s\S]*__proto__)|(constructor[\s\S]*__proto__[\s\S]*prototype)|(constructor[\s\S]*prototype[\s\S]*__proto__))[\s\S]*
    - pattern-not-regex: |
        Object\.freeze\([\s\S]*
    - pattern-not-regex: |
        Object\.create\(null\)[\s\S]*
  message: accessing obj[key], where obj and keys are from 1 common argument
  severity: WARNING
  languages: [javascript]

