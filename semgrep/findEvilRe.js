const { extractRegexesFromSource } = require("./findRegex.js");
const safe = require('safe-regex');
// const fs = require("fs");

export function evilRegExes(func) {
    try{
        const iterator = extractRegexesFromSource("const name = " + func, null);
        const arr = Array.from(iterator).map(regex => regex.pattern);
        
        return arr.filter(el => !safe(el));
    } catch(e) {
        console.error(e);
        return [];
    }
}
// const data = JSON.parse(fs.readFileSync("../googleDB/protoPollutionMarked.json").toString());

// data.flatMap(obj => obj.files)
//     .flatMap(file => file.affectedFunctions)
//     .forEach(funcsObj => {
//         if (evilRegExes(funcsObj.vulnerable).length) {
//             funcsObj.evilRe = evil;
//         }
//     });

// fs.writeFileSync("../googleDB/evilRE.json", JSON.stringify(data, null, 2))



